@page "/servicios"
@using Models
@using Services
@inject IServiciosService ServiciosService 

<MudText Typo="Typo.h3">Servicios</MudText>

<MudGrid>
<<<<<<< HEAD
    @foreach (var item in reservas)
=======
    @foreach (var item in SistemaDeREserva)
>>>>>>> 66051ed17c4d369f8e6182c049beb6f1f4073ea7
    {
        <MudItem xs="12" sm="10" md="6" lg="4">
            <MudCard>
                <MudCardHeader Class="blue darken-1">
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">@item.Tipo</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>

                    <MudText Typo="Typo.body2">Disponibilidad del servicio: @item.Estado</MudText>

                </MudCardContent>
                <MudCardActions>
                    <MudButton Link="@($"/munixdepto/{item.Id}")" Variant="Variant.Outlined" Color="Color.Tertiary"
                           Class="text-center">Ver servicios</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    }
</MudGrid>

<img src="images/bodas.jpeg" alt="servicio" width="30%" />
<img src="images/cumples.jpeg" alt="servicio" width="30%" />
<img src="images/quince.jpeg" alt="servicio" width="30%" />

@code {
<<<<<<< HEAD
    IEnumerable<Servicio> reservas = new List<Servicio>();
    protected override async Task OnInitializedAsync()
    {
        reservas = await ServiciosService.GetAll();
=======
    IEnumerable<Servicio> SistemaDeREserva = new List<Servicio>();
    protected override async Task OnInitializedAsync()
    {
        SistemaDeREserva = await ServiciosService.GetAll();
>>>>>>> 66051ed17c4d369f8e6182c049beb6f1f4073ea7
    }

}
